#!/usr/bin/env zsh

autoload dot_printf
autoload dot_printf_err
autoload dot_printf_setup
autoload dot_printf_uninstall
autoload dot_printf_warn
autoload dot_printf_clean

dot_installers_dir=${DOT_PATH}/lib/dot/installers
dot_ansible_playbook_dir=${HOME}/.ansible

dot_zsh_update() {
    # Update environment after everything has been done
    dot_printf "Updating zsh environment ..."
    . ${HOME}/.zshenv
    . ${HOME}/.zshrc
}

# Update repository at DOT_HOME
dot_update() {
    dot_printf "Updating dotfiles git repository ..."
    git -C $DOT_HOME pull || true

    # stow all directories inside DOT_HOME
    # deploy all changes in the ansible playbook
    dot_zsh_update # Update zsh environment
}

# This will automatically stow directories inside $DOT_HOME
dot_stow() {
    for i in "$@"; do
        stow --verbose=1 -R -d $DOT_HOME -t $HOME $i
    done
}

# This will automatically unstow directories inside $DOT_HOME
dot_unstow() {
    for i in "$@"; do
        stow --verbose=1 -D -d $DOT_HOME -t $HOME $i
    done
}

dot_refresh() {
    dot_zsh_update # Update zsh environment
}

# Execute ansible playbook to deploy system-wide changes
dot_deploy() {
    cd $dot_ansible_playbook_dir && \
        ansible-playbook site.yml -i inventory || exit 1
}

# Stow/install packages inside DOT_HOME
dot_install() {
    if [ -d ${DOT_HOME}/$1 ]; then
        dot_stow $1 || exit 1
    fi
    if [ -x ${dot_installers_dir}/$1 ]; then
        . ${dot_installers_dir}/$1 # install the actual thing
    fi
    dot_zsh_update # Update zsh environment
}

#
# Print help
#
dot_print_help() {
    echo "Usage: dot <COMMAND> <ARGUMENTS>"
    echo
    echo "  dot stow <package> - Stow package(s)"
    echo "  dot unstow <package> - Unstow package(s)"
    echo "  dot reload|refresh - Reload zsh environment"
    echo "  dot update - Update git repo + reload everything"
}
case $1 in
    install)
        dot_install ${@:2}
        ;;
    stow)
        dot_stow ${@:2}
        ;;
    deploy)
        dot_deploy
        ;;
    unstow)
        dot_unstow ${@:2}
        ;;
    refresh|reload)
        dot_refresh
        ;;
    update)
        dot_update ${@:2}
        ;;
    *)
        dot_print_help; exit 1
        ;;
esac

exit 0
